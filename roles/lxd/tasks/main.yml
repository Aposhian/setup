---
- name: Install dependencies for LXD on Debian-based OS
  import_tasks: debian.yml
  when: ansible_facts['os_family'] == 'Debian'
- name: Home src directory is present
  file:
    path: ~/src
    state: directory
- name: Download LXD Release
  get_url:
    url: https://github.com/lxc/lxd/releases/download/lxd-{{ lxd_version }}/lxd-{{ lxd_version }}.tar.gz
    checksum: "{{ lxd_checksum }}"
    dest: /tmp/lxd-{{ lxd_version }}.tar.gz
- name: Extract LXD source
  unarchive:
    src: /tmp/lxd-{{ lxd_version }}.tar.gz
    remote_src: yes
    dest: ~/src/
    creates: ~/src/lxd-{{ lxd_version }}
- name: Make LXD dependencies and get environment
  command:
    chdir: ~/src/lxd-{{ lxd_version }}
    cmd: make deps
    creates: ./vendor/raft/libtool # TODO: use something more robust than this
  register: make_deps
- name: Build LXD
  shell:
    chdir: ~/src/lxd-{{ lxd_version }}
    cmd: |
      {{ make_deps.stdout | regex_search('^export.*', multiline=True) }}
      make
    creates: ~/go/bin/lxd
- name: Add dependencies to LD_LIBRARY_PATH
  lineinfile:
    path: "{{ shell_env }}"
    create: yes
    line: export LD_LIBRARY_PATH="$HOME/src/lxd-4.23/vendor/raft/.libs/:$HOME/src/lxd-4.23/vendor/dqlite/.libs/:$LD_LIBRARY_PATH"
  when: shell_env is defined
- name: Add subuid and subgid for root
  become: yes
  lineinfile:
    path: "{{ item }}"
    line: root:1000000:1000000000
  loop:
    - /etc/subuid
    - /etc/subgid
- name: Add systemd service for LXD
  become: yes
  template:
    src: lxd.service.j2
    dest: /etc/systemd/system/lxd.service
  register: systemd_template_result
- name: LXD service started
  become: yes
  systemd:
    name: lxd.service
    daemon_reload: yes
    enabled: yes
    state: started
